[{"/home/kobus/Documents/e_learning/login_app/src/index.js":"1","/home/kobus/Documents/e_learning/login_app/src/App.js":"2","/home/kobus/Documents/e_learning/login_app/src/components/Home/Home.js":"3","/home/kobus/Documents/e_learning/login_app/src/components/MainHeader/MainHeader.js":"4","/home/kobus/Documents/e_learning/login_app/src/components/Login/Login.js":"5","/home/kobus/Documents/e_learning/login_app/src/components/MainHeader/Navigation.js":"6","/home/kobus/Documents/e_learning/login_app/src/components/UI/Button/Button.js":"7","/home/kobus/Documents/e_learning/login_app/src/components/UI/Card/Card.js":"8"},{"size":169,"mtime":1616593928000,"results":"9","hashOfConfig":"10"},{"size":1154,"mtime":1623173166736,"results":"11","hashOfConfig":"10"},{"size":250,"mtime":1616593928000,"results":"12","hashOfConfig":"10"},{"size":368,"mtime":1616593928000,"results":"13","hashOfConfig":"10"},{"size":2845,"mtime":1623176306139,"results":"14","hashOfConfig":"10"},{"size":571,"mtime":1616593928000,"results":"15","hashOfConfig":"10"},{"size":353,"mtime":1616593928000,"results":"16","hashOfConfig":"10"},{"size":218,"mtime":1616593928000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"138kkq6",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/kobus/Documents/e_learning/login_app/src/index.js",[],"/home/kobus/Documents/e_learning/login_app/src/App.js",["37"],"import React, { useState, useEffect } from \"react\";\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  ///this local stored state is a singular example where no dependency is required\n  const storedIsLoggedInInfo = localStorage.getItem(\"isLoggedIn\");\n  useEffect(() => {\n    if (storedIsLoggedInInfo === \"1\") {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem(\"isLoggedIn\", \"1\");\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"isLoggedIn\");\n    setIsLoggedIn(false);\n  };\n\n  return (\n    <React.Fragment>\n      <MainHeader isAuthenticated={isLoggedIn} onLogout={logoutHandler} />\n      <main>\n        {!isLoggedIn && <Login onLogin={loginHandler} />}\n        {isLoggedIn && <Home onLogout={logoutHandler} />}\n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","/home/kobus/Documents/e_learning/login_app/src/components/Home/Home.js",[],"/home/kobus/Documents/e_learning/login_app/src/components/MainHeader/MainHeader.js",[],"/home/kobus/Documents/e_learning/login_app/src/components/Login/Login.js",["38"],"import React, { useState, useEffect } from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\n\nconst Login = (props) => {\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  // useEffect(() => {\n  //   const indentifierClear = setTimeout(() => {\n  //     setFormIsValid(\n  //       enteredPassword.trim().length > 6 && enteredEmail.includes(\"@\")\n  //     );\n  //     return () => {\n  //       clearTimeout(indentifierClear);\n  //     };\n  //   }, 750);\n  // }, [enteredEmail, enteredPassword]);\n\n  //an example of where dependencies is used\n  //no useState value (setTimerIsActive)\n  //no API functions (setTimeOut)\n  //no variables or functions defined outside of the component (myTimer)\n\n  const emailChangeHandler = (event) => {\n    setEnteredEmail(event.target.value);\n    setFormIsValid(\n      enteredPassword.trim().length > 6 && enteredEmail.includes(\"@\")\n    );\n  };\n\n  const passwordChangeHandler = (event) => {\n    setEnteredPassword(event.target.value);\n    setFormIsValid(\n      enteredPassword.trim().length > 6 && enteredEmail.includes(\"@\")\n    );\n  };\n\n  const validateEmailHandler = () => {\n    setEmailIsValid(enteredEmail.includes(\"@\"));\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(enteredEmail, enteredPassword);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailIsValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={enteredEmail}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordIsValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={enteredPassword}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n","/home/kobus/Documents/e_learning/login_app/src/components/MainHeader/Navigation.js",[],"/home/kobus/Documents/e_learning/login_app/src/components/UI/Button/Button.js",[],["39","40"],"/home/kobus/Documents/e_learning/login_app/src/components/UI/Card/Card.js",[],{"ruleId":"41","severity":1,"message":"42","line":15,"column":6,"nodeType":"43","endLine":15,"endColumn":8,"suggestions":"44"},{"ruleId":"45","severity":1,"message":"46","line":1,"column":27,"nodeType":"47","messageId":"48","endLine":1,"endColumn":36},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'storedIsLoggedInInfo'. Either include it or remove the dependency array.","ArrayExpression",["53"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["54"],"no-negated-in-lhs",["55"],{"desc":"56","fix":"57"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [storedIsLoggedInInfo]",{"range":"58","text":"59"},[524,526],"[storedIsLoggedInInfo]"]